import java_cup.runtime.*;
import java.util.ArrayList;

/* Terminales */
terminal String COMANDO;
terminal String COMA;
terminal String LBRACKET;
terminal String RBRACKET;
terminal String SEMIC;
terminal Double NUMERO;

/* No terminales */
nonterminal Object programa;
nonterminal Object comando;
nonterminal ArrayList<Double> numero_o_lista;

/* Precedencias y asociatividad */
precedence left COMA;
precedence left NUMERO;

/* Eliminar sensibilidad a espacios */
precedence left COMANDO, LBRACKET;

start with programa;

programa ::= comando
    {:
        RESULT = Boolean.TRUE;
    :}
;

comando ::=
    /* Comandos aritméticos (lista de números) */
    COMANDO:cmd LBRACKET numero_o_lista:nums RBRACKET SEMIC
    {:
        boolean result = false;
        switch (cmd.trim()) {
            case "sumar": result = Operations.plus(nums); break;
            case "restar": result = Operations.minus(nums); break;
            case "multiplicar": result = Operations.times(nums); break;
            case "dividir": result = Operations.divide(nums); break;
            case "IVA": result = Operations.iva(nums.get(0)); break;
            case "ISN": result = Operations.isn(nums.get(0)); break;
            case "ISH": result = Operations.ish(nums.get(0)); break;
            case "ISR": result = Operations.isr(nums.get(0)); break;
            case "ISAN": result = Operations.isan(nums.get(0)); break;
            case "ISAI": result = Operations.isai(nums.get(0)); break;
            case "porcentaje": result = Operations.percentage(nums.get(0), nums.get(1)); break;
            case "margen_ganancia": result = Operations.margen_ganancia(nums.get(0), nums.get(1)); break;
            default: System.err.println("Comando no reconocido: " + cmd);
        }
        RESULT = Boolean.TRUE;
    :}
;

numero_o_lista ::=
    NUMERO:n
    {:
        ArrayList<Double> lista = new ArrayList<>();
        lista.add(n);
        RESULT = lista;
    :}
    |
    numero_o_lista:lista COMA NUMERO:n
    {:
        lista.add(n);
        RESULT = lista;
    :}
;
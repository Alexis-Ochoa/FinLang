import java_cup.runtime.*;
import Operations;
import java_cup.runtime.Symbol;

// Definir tokens provenientes del analizador léxico (JFlex)
terminal String COMANDO;
terminal Char COMA;
terminal Char RBRACKET;
terminal Char LBRACKET;
terminal Char SEMIC;
terminal Integer NUMERO;

// Definir no terminales
nonterminal programa, comando;

// Definir el inicio del análisis sintáctico
start with programa;

// Reglas de producción del lenguaje
programa ::= comando;
comando ::= error
  {:
    System.err.println("Comando erroneo, verifique la sintaxis del comando");
  :};
  //Aquí va la estructura, en este caso debe de recibir un comando, luego un número y luego otro para que lo acepte, caso contrario será incorrecto
comando ::= COMANDO:CMD LBRACKET array_numbers:NUM RBRACKET SEMIC
    {:
        if (CMD.equals("sumar")){
            Operations.plus(NUM);
        }if (CMD.equals("restar")){
            Operations.minus(NUM);
        }if (CMD.equals("multiplicar")){
            Operations.times(NUM);
        }if (CMD.equals("dividir")){
            Operations.divide(NUM);
        }
    :};
comando ::= COMANDO:CMD LBRACKET NUMERO:X RBRACKET SEMIC
    {:
        if (CMD.equals("IVA")){
            Operations.iva(X);
        }
        if (CMD.equals("ISN")){
            Operations.isn(X);
        }
        if (CMD.equals("ISH")){
            Operations.ish(X);
        }
    :};
comando ::= COMANDO:CMD LBRACKET NUMERO:NUMBER NUMERO:PERCENTAGE RBRACKET SEMIC
    {:
        if (CMD.equals("porcentaje")){
            Operations.percentage(NUMERO, PERCENTAGE);
        }
    :};

array_numbers ::= NUMERO:N
    {:
        RESULT = new ArrayList<Double>(); RESULT.add(N);
    :} | array_numbers:NUMS COMA NUMERO:N
    {:
        NUMS.add(N);
        RESULT = NUMS;
    :};
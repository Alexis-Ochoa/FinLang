import java_cup.runtime.*;
import java.util.ArrayList;

parser code {:
  public static final int EXPECTED_CONFLICTS = 3;
:};

/* Terminales */
terminal String COMANDO;
terminal String COMA;
terminal String LBRACKET;
terminal String RBRACKET;
terminal String SEMIC;
terminal Double NUMERO;

/* No terminales */
nonterminal Object programa;
nonterminal Object comando;
nonterminal ArrayList<Double> lista_numeros;

/* Precedencias */
precedence left COMA;
precedence left NUMERO;
precedence left COMANDO, LBRACKET;

start with programa;


programa ::= comando;

comando ::=
    COMANDO:cmd LBRACKET lista_numeros:nums RBRACKET SEMIC
    {:
        String output = "";
        try {
            switch (cmd.trim()) {
                case "sumar":
                    output = "La suma es " + Operations.plus(nums);
                    break;
                case "restar":
                    output = "La resta es " + Operations.minus(nums);
                    break;
                case "multiplicar":
                    output = "El producto es " + Operations.times(nums);
                    break;
                case "dividir":
                    output = "El cociente es " + Operations.divide(nums);
                    break;
                case "porcentaje":
                    if (nums.size() >= 2)
                        output = "El porcentaje es " + Operations.percentage(nums.get(0), nums.get(1));
                    else
                        output = "Se requieren dos números para porcentaje";
                    break;
                case "margen_ganancia":
                    if (nums.size() >= 2)
                        output = "El margen de ganancia es " + Operations.margen_ganancia(nums.get(0), nums.get(1));
                    else
                        output = "Se requieren dos números para margen_ganancia";
                    break;
                case "IVA":
                    if (nums.size() >= 1)
                        output = "IVA calculado: " + Operations.iva(nums.get(0));
                    else
                        output = "Se requiere un número para IVA";
                    break;
                case "ISR":
                    if (nums.size() >= 1)
                        output = "ISR calculado: " + Operations.isr(nums.get(0));
                    else
                        output = "Se requiere un número para ISR";
                    break;
                case "ISN":
                    if (nums.size() >= 1)
                        output = "ISN calculado: " + Operations.isn(nums.get(0));
                    else
                        output = "Se requiere un número para ISN";
                    break;
                case "ISH":
                    if (nums.size() >= 1)
                        output = "ISH calculado: " + Operations.ish(nums.get(0));
                    else
                        output = "Se requiere un número para ISH";
                    break;
                case "ISAN":
                    if (nums.size() >= 1)
                        output = "ISAN calculado: " + Operations.isan(nums.get(0));
                    else
                        output = "Se requiere un número para ISAN";
                    break;
                case "ISAI":
                    if (nums.size() >= 1)
                        output = "ISAI calculado: " + Operations.isai(nums.get(0));
                    else
                        output = "Se requiere un número para ISAI";
                    break;
                default:
                    output = "Comando no reconocido: " + cmd;
            }
        } catch (Exception e) {
            output = "Error al ejecutar el comando: " + e.getMessage();
        }
        RESULT = output;  // IMPORTANTE
    :}
;

lista_numeros ::=
    NUMERO:n
    {:
        ArrayList<Double> l = new ArrayList<>();
        l.add(n);
        RESULT = l;
    :}
  |
    lista_numeros:lista COMA NUMERO:n
    {:
        lista.add(n);
        RESULT = lista;
    :}
;
